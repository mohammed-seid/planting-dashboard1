---
format: dashboard
execute: 
  echo: false
---


```{r, loadpackages}
#| echo: false
#| include: false
library(tidyverse)
library(forcats)
library(targets)
library("googlesheets4")
library(janitor)
library(ggthemes)
library(lubridate)
library(plotly)
library(highcharter)
library(janitor)
library(outliers)
library(DT)
tar_source("R/formatting.R")
```



```{r, authenticate_googlesheet}
#| echo: false
#| include: false
gs4_auth(cache = ".secrets", email = "mohammed.seidhussen@oneacrefund.org")

```


```{r, import_data}
#| echo: false
#| include: false
df<- read_sheet("https://docs.google.com/spreadsheets/d/1jA-GzgXFwaPvqgUuniywHc8t3unz_Rsl0alHNx7sxgM/edit?gid=275273939#gid=275273939", "Sync_Dataiku")

```






```{r, change_to_dataframe}
#| echo: false
#| include: false

df <- data.frame(lapply(df, function(col) {
    if (is.list(col)) {
        return(sapply(col, function(x) if (length(x) > 0) x[1] else NA))  # Take the first element or NA
    } else {
        return(col)
    }
}), stringsAsFactors = FALSE)


```



```{r}
df<-  df |> 
  mutate(date = as.Date(completed_time))
```

```{r}
df <- df |> 
  filter(date > as.Date("2024-10-31"))
```



```{r}
df_completed <- df |> 
  dplyr::filter(intro_consent.knows_info == 1)
```




## Row

### Column {.tabset width="50%"}


#### Enumerator level average survey duration

```{r}
# As a practice, we should look at enumerator level checks. Also, we may extend this for enumerator pairs or enumerator teams.

################### Enumerator level average survey duration ########################

df_completed$duration <- round(as.numeric(df_completed$completed_time - df_completed$started_time)/60)

overall_avg_duration <- mean(df_completed$duration[!is.na(df_completed$duration)])

summary_table<- df_completed %>%
  group_by(username) %>%
  summarise(duration_mean = mean(duration),
            overall_avg_duration,
            perc_diff_avg = ((duration_mean - overall_avg_duration) / overall_avg_duration))

# Display the table using DT
datatable(summary_table, options = list(
  pageLength = 10,
  autoWidth = TRUE,
  columnDefs = list(list(className = 'dt-center', targets = "_all"))
)) |> 
  formatRound(columns = c('duration_mean', 'overall_avg_duration', 'perc_diff_avg'), digits = 2) %>%
  formatPercentage('perc_diff_avg', digits = 2)
```

#### Survey below 15 minutes 

```{r}
df_completed |> 
  filter(duration <= 15) |> 
  select(username, formid, started_time, completed_time, duration) |>
  datatable(options = list(
    pageLength = 10,  # Number of rows per page
    autoWidth = TRUE,  # Adjusts column width
    columnDefs = list(list(className = 'dt-center', targets = "_all"))  # Center-align columns
  )) %>%
  formatRound(columns = 'duration', digits = 1)  # Round 'duration' to 2 decimal places
```

#### Survey above 400 minutes 

```{r}
df_completed |> 
  filter(duration > 400) |> 
  select(username, formid, started_time, completed_time, duration) |>
  datatable(options = list(
    pageLength = 10,  # Number of rows per page
    autoWidth = TRUE,  # Adjusts column width
    columnDefs = list(list(className = 'dt-center', targets = "_all"))  # Center-align columns
  )) %>%
  formatRound(columns = 'duration', digits = 1)  # Round 'duration' to 2 decimal places
```

